version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/golang:1.16
      - image: rabbitmq
        name: rabbitmq
    working_directory: /go/src/github.com/vksssd/go-rabbitmq

jobs:
  build-test-producer:
    executor: docker-executor
    # docker:
    #   - image: circleci/golang:1.16
    #     name: golang
    #   - image: rabbitmq
    #     name: rabbitmq
    steps:
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true

      - checkout
      - run:
          name: Install dependencies
          command: go mod download

      - run:
          name: Install Dockerize
          command: |
            curl -sSL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | sudo tar -C /usr/local/bin -xzv

      - run:
          name: Wait for RabbitMQ to be ready
          command: dockerize -wait tcp://rabbitmq:5672 -timeout 30s

      - run:
          name: Build producer
          command: |
            cd send
            go build -o send .
            chmod +x send 
          
      - run:
          name: Build and push producer to Docker
          command: |
            cd send
            TAG=$(echo $CIRCLE_SHA1 | cut -c1-7)
            docker build -t vksssd/rabbitmq-producer:$TAG .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push vksssd/rabbitmq-producer:$TAG
            docker tag vksssd/rabbitmq-producer:$TAG vksssd/rabbitmq-producer:latest
            docker push vksssd/rabbitmq-producer:latest

      # - run:
      #     name: Test producer
      #     command: |
      #       cd send
      #       go test -v

  build-test-consumer:
    executor: docker-executor
    # services:
    #   - rabbitmq
    # docker:
    #   - image: circleci/golang:1.16
    #     name: golang
    #   - image: rabbitmq
    #     name: rabbitmq
    steps:

      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true

      - checkout
      - run:
          name: Install dependencies
          command: go mod download

      - run:
          name: Install Dockerize
          command: |
            curl -sSL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | sudo tar -C /usr/local/bin -xzv


      - run:
          name: Wait for RabbitMQ to be ready
          command: dockerize -wait tcp://rabbitmq:5672 -timeout 30s

      - run:
          name: Build consumer
          command: |
            cd receive
            go build -o receive .            
            chmod +x receive

      # - run:
      #     name: Test consumer
      #     command: |
      #       cd receive
      #       go test -v

      - run:
          name: Build and push consumer to Docker
          command: |
            cd receive
            TAG=$(echo $CIRCLE_SHA1 | cut -c1-7)
            docker build -t vksssd/rabbitmq-consumer:$TAG .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push vksssd/rabbitmq-consumer:$TAG
            docker tag vksssd/rabbitmq-consumer:$TAG vksssd/rabbitmq-consumer:latest
            docker push vksssd/rabbitmq-consumer:latest


  docker-publish:
    docker:
      - image: circleci/docker:stable
    steps:
      - setup_remote_docker:
          version: 20.10.7

      - checkout

      - run:
          name: Build and push producer to Docker
          command: |
            cd send
            TAG=$(echo $CIRCLE_SHA1 | cut -c1-7)
            docker build -t vksssd/rabbitmq-producer:$TAG .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push vksssd/rabbitmq-producer:$TAG
            docker tag vksssd/rabbitmq-producer:$TAG vksssd/rabbitmq-producer:latest
            docker push vksssd/rabbitmq-producer:latest

      - run:
          name: Build and push consumer to Docker
          command: |
            cd receive
            TAG=$(echo $CIRCLE_SHA1 | cut -c1-7)
            docker build -t vksssd/rabbitmq-consumer:$TAG .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push vksssd/rabbitmq-consumer:$TAG
            docker tag vksssd/rabbitmq-consumer:$TAG vksssd/rabbitmq-consumer:latest
            docker push vksssd/rabbitmq-consumer:latest

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672

workflows:
  version: 2
  build-test-publish:
    jobs:
      - build-test-producer
      - build-test-consumer
      # - docker-publish:
      #     requires:
      #       - build-test-producer
      #       - build-test-consumer
